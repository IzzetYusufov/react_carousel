{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Form/Form.tsx","App.tsx","index.tsx"],"names":["Carousel","state","move","handleRightSlide","props","itemWidth","images","step","frameSize","infinite","slideLength","length","everySlide","setState","handleLefttSlide","this","animationDuration","className","style","width","transition","map","img","i","transform","src","alt","type","onClick","PureComponent","Form","handleChnges","event","currentTarget","name","value","checked","correctValue","prevState","id","htmlFor","defaultValue","onChange","min","max","Component","App","ReactDOM","render","document","getElementById"],"mappings":"mRAiBaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,GAFV,EAOEC,iBAAmB,WACjB,MAMI,EAAKC,MALPC,EADF,EACEA,UACAC,EAFF,EAEEA,OACAC,EAHF,EAGEA,KACAC,EAJF,EAIEA,UACAC,EALF,EAKEA,SAEMP,EAAS,EAAKD,MAAdC,KACFQ,EAAcL,EAAYC,EAAOK,OAASH,EAAYH,EACtDO,EAAaP,EAAYE,EAE/B,OAAIE,GAAYP,IAASQ,EAChB,EAAKG,SAAS,CAAEX,KAAM,IAG1BA,EAAOU,EAAcF,EACjB,EAAKG,SAAS,CAAEX,KAAMA,EAAOU,IAG/B,EAAKC,SAAS,CAAEX,KAAMQ,KA3BjC,EA8BEI,iBAAmB,WACjB,MAMI,EAAKV,MALPC,EADF,EACEA,UACAE,EAFF,EAEEA,KACAD,EAHF,EAGEA,OACAG,EAJF,EAIEA,SACAD,EALF,EAKEA,UAEMN,EAAS,EAAKD,MAAdC,KACFU,EAAaP,EAAYE,EACzBG,EAAcL,EAAYC,EAAOK,OAASH,EAAYH,EAE5D,OAAII,GAAqB,IAATP,EACP,EAAKW,SAAS,CAAEX,KAAMQ,IAG1BR,EAAOU,EAAc,EACjB,EAAKC,SAAS,CAAEX,KAAMA,EAAOU,IAG/B,EAAKC,SAAS,CAAEX,KAAM,KAlDjC,4CAqDE,WACE,MAKIa,KAAKX,MAJPE,EADF,EACEA,OACAD,EAFF,EAEEA,UACAG,EAHF,EAGEA,UACAQ,EAJF,EAIEA,kBAGMd,EAASa,KAAKd,MAAdC,KAER,OACE,qCACE,oBACE,UAAQ,QACRe,UAAU,QAFZ,iCAIoBT,EAJpB,aAMA,sBACES,UAAU,WACVC,MAAO,CACLC,MAAM,GAAD,OAAKX,EAAYH,EAAjB,OAHT,UAME,oBACEY,UAAU,iBACVC,MAAO,CACLE,WAAW,GAAD,OAAKJ,EAAL,OAHd,SAMGV,EAAOe,KAAI,SAACC,EAAKC,GAChB,OACE,oBAEEN,UAAU,iBACVC,MAAO,CACLM,UAAU,cAAD,QAAiBtB,EAAjB,OACTkB,WAAW,GAAD,OAAKJ,EAAL,OALd,SAQE,qBACES,IAAKH,EACLH,MAAOd,EACPqB,IAAG,UAAKH,EAAI,MAVTD,QAgBb,sBAAKL,UAAU,oBAAf,UACE,wBACEU,KAAK,SACLC,QAASb,KAAKZ,iBACd,UAAQ,OAHV,kBAQA,wBACEwB,KAAK,SACLC,QAASb,KAAKD,iBAFhB,+BA/GZ,GAA8Be,iBCJjBC,G,MAAb,4MACE7B,MAAQ,CACNK,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFC,KAAM,EACNC,UAAW,EACXH,UAAW,IACXW,kBAAmB,IACnBP,UAAU,GAlBd,EAqBEsB,aAAe,SAACC,GACd,MAAiCA,EAAMC,cAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,QACfC,EAAwB,aAATH,EAAsBE,EAAUD,EAErD,OAAO,EAAKtB,UAAS,SAACyB,GAAD,mBAAC,eACjBA,GADgB,kBAElBJ,GAAQG,QA3Bf,4CA+BE,WACE,MAMItB,KAAKd,MALPK,EADF,EACEA,OACAD,EAFF,EAEEA,UACAG,EAHF,EAGEA,UAAWD,EAHb,EAGaA,KACXS,EAJF,EAIEA,kBACAP,EALF,EAKEA,SAGF,OACE,qCACE,cAAC,EAAD,CACEH,OAAQA,EACRC,KAAMA,EACNC,UAAWA,EACXH,UAAWA,EACXW,kBAAmBA,EACnBP,SAAUA,IAEZ,sBAAMQ,UAAU,OAAOsB,GAAG,SAA1B,SACE,sBAAKtB,UAAU,kBAAf,UACE,wBAAOuB,QAAQ,SAAf,UACE,kDACA,uBACEb,KAAK,SACLO,KAAK,YACLO,aAAa,MACbF,GAAG,SACHhC,KAAK,KACLmC,SAAU3B,KAAKgB,aACfd,UAAU,mBAId,wBAAOuB,QAAQ,UAAf,UACE,iDACA,uBACEb,KAAK,SACLO,KAAK,YACLO,aAAa,IACbE,IAAI,IACJC,IAAKtC,EAAOK,OACZ+B,SAAU3B,KAAKgB,aACfQ,GAAG,UACHtB,UAAU,mBAId,wBAAOuB,QAAQ,SAAf,UACE,4CACA,uBACEb,KAAK,SACLO,KAAK,OACLO,aAAa,IACbE,IAAI,IACJD,SAAU3B,KAAKgB,aACfQ,GAAG,SACHtB,UAAU,mBAId,kCACE,0DACA,uBACEU,KAAK,SACLO,KAAK,oBACLO,aAAa,OACbE,IAAK,IACLpC,KAAM,IACNmC,SAAU3B,KAAKgB,aACfd,UAAU,mBAId,sBAAKA,UAAU,oBAAf,UACE,gDACA,yCAEE,uBACEU,KAAK,WACLQ,MAAM,OACND,KAAK,WACLQ,SAAU3B,KAAKgB,iCAjHjC,GAA0Bc,cCRpBC,E,4JACJ,WACE,OACE,qBAAK7B,UAAU,MAAf,SACE,cAAC,EAAD,U,GAJU4B,aAUHC,ICZfC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.07615913.chunk.js","sourcesContent":["import { PureComponent } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  move: number;\n  // slideLength: number;\n};\n\nexport class Carousel extends PureComponent<Props, State> {\n  state = {\n    move: 0,\n    // slideLength: this.props.itemWidth * this.props.images.length\n    // - this.props.frameSize * this.props.itemWidth,\n  };\n\n  handleRightSlide = () => {\n    const {\n      itemWidth,\n      images,\n      step,\n      frameSize,\n      infinite,\n    } = this.props;\n    const { move } = this.state;\n    const slideLength = itemWidth * images.length - frameSize * itemWidth;\n    const everySlide = itemWidth * step;\n\n    if (infinite && move === slideLength) {\n      return this.setState({ move: 0 });\n    }\n\n    if ((move + everySlide) < slideLength) {\n      return this.setState({ move: move + everySlide });\n    }\n\n    return this.setState({ move: slideLength });\n  };\n\n  handleLefttSlide = () => {\n    const {\n      itemWidth,\n      step,\n      images,\n      infinite,\n      frameSize,\n    } = this.props;\n    const { move } = this.state;\n    const everySlide = itemWidth * step;\n    const slideLength = itemWidth * images.length - frameSize * itemWidth;\n\n    if (infinite && move === 0) {\n      return this.setState({ move: slideLength });\n    }\n\n    if ((move - everySlide) > 0) {\n      return this.setState({ move: move - everySlide });\n    }\n\n    return this.setState({ move: 0 });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n    } = this.props;\n\n    const { move } = this.state;\n\n    return (\n      <>\n        <h1\n          data-cy=\"title\"\n          className=\"title\"\n        >\n          {`Carousel with ${frameSize} images`}\n        </h1>\n        <div\n          className=\"Carousel\"\n          style={{\n            width: `${frameSize * itemWidth}px`,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            {images.map((img, i) => {\n              return (\n                <li\n                  key={img}\n                  className=\"Carousel__item\"\n                  style={{\n                    transform: `translateX(${-move}px)`,\n                    transition: `${animationDuration}ms`,\n                  }}\n                >\n                  <img\n                    src={img}\n                    width={itemWidth}\n                    alt={`${i + 1}`}\n                  />\n                </li>\n              );\n            })}\n          </ul>\n          <div className=\"Carousel__buttons\">\n            <button\n              type=\"button\"\n              onClick={this.handleRightSlide}\n              data-cy=\"next\"\n            >\n              Next\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={this.handleLefttSlide}\n            >\n              Prev\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Carousel } from '../Carousel';\nimport './Form.scss';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nexport class Form extends Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleChnges = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value, checked } = event.currentTarget;\n    const correctValue = name === 'infinite' ? checked : value;\n\n    return this.setState((prevState) => ({\n      ...prevState,\n      [name]: +correctValue,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize, step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <>\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n        <form className=\"form\" id=\"formId\">\n          <div className=\"form__container\">\n            <label htmlFor=\"itemId\">\n              <strong>Item width: </strong>\n              <input\n                type=\"number\"\n                name=\"itemWidth\"\n                defaultValue=\"130\"\n                id=\"itemId\"\n                step=\"10\"\n                onChange={this.handleChnges}\n                className=\"form__input\"\n              />\n            </label>\n\n            <label htmlFor=\"frameId\">\n              <strong>Frame size </strong>\n              <input\n                type=\"number\"\n                name=\"frameSize\"\n                defaultValue=\"3\"\n                min=\"1\"\n                max={images.length}\n                onChange={this.handleChnges}\n                id=\"frameId\"\n                className=\"form__input\"\n              />\n            </label>\n\n            <label htmlFor=\"stepId\">\n              <strong>Step: </strong>\n              <input\n                type=\"number\"\n                name=\"step\"\n                defaultValue=\"3\"\n                min=\"1\"\n                onChange={this.handleChnges}\n                id=\"stepId\"\n                className=\"form__input\"\n              />\n            </label>\n\n            <label>\n              <strong>Animation duration: </strong>\n              <input\n                type=\"number\"\n                name=\"AnimationDuration\"\n                defaultValue=\"1000\"\n                min={1000}\n                step={500}\n                onChange={this.handleChnges}\n                className=\"form__input\"\n              />\n            </label>\n\n            <div className=\"form__radio-input\">\n              <strong>Infinite: </strong>\n              <label>\n                True\n                <input\n                  type=\"checkbox\"\n                  value=\"true\"\n                  name=\"infinite\"\n                  onChange={this.handleChnges}\n                />\n              </label>\n            </div>\n          </div>\n        </form>\n      </>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Form } from './components/Form';\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass App extends Component<{}, {}> {\n  render() {\n    return (\n      <div className=\"App\">\n        <Form />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}