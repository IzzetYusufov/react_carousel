{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","move","countMove","props","images","length","handleRightSlide","itemWidth","step","scrollNumber","setState","handleLefttSlide","this","frameSize","animationDuration","infinite","className","style","width","transition","map","img","i","transform","src","alt","type","onClick","PureComponent","App","handleChnges","event","currentTarget","name","value","checked","correctValue","prevState","id","htmlFor","defaultValue","onChange","min","max","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.522c5d08.chunk.js","sourcesContent":["import { PureComponent } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ntype State = {\n  move: number;\n  countMove: number;\n};\n\nexport class Carousel extends PureComponent<Props, State> {\n  state = {\n    move: 0,\n    countMove: this.props.images.length,\n  };\n\n  handleRightSlide = () => {\n    const { itemWidth, step } = this.props;\n    const { move, countMove } = this.state;\n    const scrollNumber = move + (itemWidth * step);\n\n    if (countMove === step) {\n      return;\n    }\n\n    if ((countMove - step) < step) {\n      this.setState({\n        countMove: step,\n        move: move + (itemWidth * (countMove - step)),\n      });\n    } else {\n      this.setState({\n        countMove: countMove - step,\n        move: scrollNumber,\n      });\n    }\n  };\n\n  handleLefttSlide = () => {\n    const { itemWidth, step, images } = this.props;\n    const { move, countMove } = this.state;\n    const scrollNumber = move - (itemWidth * step);\n\n    if (countMove === images.length) {\n      return;\n    }\n\n    if ((countMove + step) > images.length) {\n      this.setState({\n        countMove: images.length,\n        move: move - (itemWidth * (images.length - countMove)),\n      });\n    } else {\n      this.setState({\n        countMove: countMove + step,\n        move: scrollNumber,\n      });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { move } = this.state;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n        >\n          {images.map((img, i) => {\n            return (\n              <li\n                key={img}\n                className={infinite\n                  ? `Carousel__item ${infinite && 'Carousel__list--animation'}`\n                  : 'Carousel__item'}\n                style={{\n                  transform: `translateX(${-move}px)`,\n                  transition: `${animationDuration}ms`,\n                }}\n              >\n                <img\n                  src={img}\n                  width={itemWidth}\n                  alt={`${i + 1}`}\n                />\n              </li>\n            );\n          })}\n        </ul>\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            onClick={this.handleRightSlide}\n            data-cy=\"next\"\n          >\n            Next\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.handleLefttSlide}\n          >\n            Prev\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleChnges = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value, checked } = event.currentTarget;\n    const correctValue = name === 'infinite' ? checked : value;\n\n    return this.setState((prevState) => ({\n      ...prevState,\n      [name]: correctValue,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">\n          {`Carousel with ${frameSize} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n        <form className=\"form\" id=\"formId\">\n          <div className=\"form__container\">\n            <label htmlFor=\"itemId\">\n              <strong>Item width: </strong>\n              <input\n                type=\"number\"\n                name=\"itemWidth\"\n                defaultValue=\"130\"\n                id=\"itemId\"\n                step=\"10\"\n                onChange={(event) => (this.handleChnges(event))}\n                className=\"form__input\"\n              />\n            </label>\n\n            <label htmlFor=\"frameId\">\n              <strong>Frame size </strong>\n              <input\n                type=\"number\"\n                name=\"frameSize\"\n                defaultValue=\"3\"\n                min=\"1\"\n                max={this.state.images.length}\n                onChange={(event) => (this.handleChnges(event))}\n                id=\"frameId\"\n                className=\"form__input\"\n              />\n            </label>\n\n            <label htmlFor=\"stepId\">\n              <strong>Step: </strong>\n              <input\n                type=\"number\"\n                name=\"step\"\n                defaultValue=\"3\"\n                min=\"1\"\n                onChange={(event) => (this.handleChnges(event))}\n                id=\"stepId\"\n                className=\"form__input\"\n              />\n            </label>\n\n            <label>\n              <strong>Animation duration: </strong>\n              <input\n                type=\"number\"\n                name=\"AnimationDuration\"\n                defaultValue=\"1000\"\n                min={1000}\n                step={500}\n                onChange={(event) => (this.handleChnges(event))}\n                className=\"form__input\"\n              />\n            </label>\n\n            <div className=\"form__radio-input\">\n              <strong>Infinite: </strong>\n              <label>\n                True\n                <input\n                  type=\"checkbox\"\n                  value=\"true\"\n                  name=\"infinite\"\n                  onChange={(event) => (this.handleChnges(event))}\n                />\n              </label>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}